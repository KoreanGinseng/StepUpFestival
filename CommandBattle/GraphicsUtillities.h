/*************************************************************************//*!

					@file	GraphicsUtillities.h
					@brief	描画ユーティリティクラス

															@author	いのうえ
															@date	2020.02.14
*//**************************************************************************/

//ONCE
#pragma once

//INCLUDE
#include	"DxLib.h"
#include	<string>

namespace DxLibPlus
{
	/*******************************//*!
	@brief	描画ユーティリティクラス

	@author	いのうえ
	*//********************************/
	class CGraphicsUtillities
	{
	private:
		CGraphicsUtillities(void) = delete;
		~CGraphicsUtillities(void) = delete;
	public:
		/*************************************************************************//*!
				@brief			ウィンドウモード・フルスクリーンモードの変更を行う
				@param[in]		flag		ウィンドウモードで起動するかのフラグ情報

				@return			DX_CHANGESCREEN_OK		成功<br>
								DX_CHANGESCREEN_RETURN	失敗<br>
								DX_CHANGESCREEN_DEFAULT 失敗
		*//**************************************************************************/
		static int ChangeWindowMode(const int& flag);
		/*************************************************************************//*!
				@brief			ウィンドウのタイトルを変更する
				@param[in]		title		タイトル文字列

				@return			0			成功<br>
								-1			エラー発生
		*//**************************************************************************/
		static int SetWindowTitle(const std::string& title);
		/*************************************************************************//*!
				@brief			ウィンドウのアイコンを変更する
				@param[in]		id			アイコンID

				@return			0			成功<br>
								-1			エラー発生
		*//**************************************************************************/
		static int SetWindowIcon(const int& id);
		/*************************************************************************//*!
				@brief			ウィンドウのサイズを変更する
				@param[in]		w			横幅
				@param[in]		h			縦幅

				@return			0			成功<br>
								-1			エラー発生
		*//**************************************************************************/
		static int SetWindowSize(const int& w, const int& h);
		/*************************************************************************//*!
				@brief			フォントのサイズを変更する
				@param[in]		size		サイズ

				@return			0			成功<br>
								-1			エラー発生
		*//**************************************************************************/
		static int SetFontSize(const int& size);
		/*************************************************************************//*!
				@brief			画面のサイズ幅を取得する
				@param			None

				@return			画面幅
		*//**************************************************************************/
		static int GetTargetWidth(void);
		/*************************************************************************//*!
				@brief			画面のサイズ縦を取得する
				@param			None

				@return			画面高さ
		*//**************************************************************************/
		static int GetTargetHeight(void);
		/*************************************************************************//*!
				@brief			描画先グラフィック領域の指定
				@param[in]		screen		対象となるグラフィック領域を指定する

				@return			0			成功<br>
								-1			エラー発生
		*//**************************************************************************/
		static int SetDrawScreen(const int& screen);
		/*************************************************************************//*!
				@brief			画面に書かれたものを削除する
				@param			None

				@return			0			成功<br>
								-1			エラー発生
		*//**************************************************************************/
		static int ClearDrawScreen(void);
		/*************************************************************************//*!
				@brief			画面裏に書かれたものを表に反映する
				@param[in]		size		サイズ

				@return			0			成功<br>
								-1			エラー発生
		*//**************************************************************************/
		static int ScreenFlip(void);
	};
}