/*************************************************************************//*!

					@file	TurnManager.h
					@brief	ターン管理クラス

															@author	いのうえ
															@date	2020.02.15
*//**************************************************************************/
#pragma once

namespace DxLibPlus
{
	/// <summary>ターン列挙</summary>
	enum Turn {
		TURN_PLAYER,
		TURN_ENEMY,
	};

	// ********************************************************************************
	/// <summary>
	/// ターン管理クラス
	/// </summary>
	// ********************************************************************************
	class CTurnManager
	{
	private:
		Turn		m_Turn;			//!<現在のターン
		Turn		m_PrevTurn;		//!<前フレームのターン
		bool		m_bChange;		//!<ターン変更フラグ

		// ********************************************************************************
		/// <summary>
		/// コンストラクタ
		/// </summary>
		/// <returns>None</returns>
		/// <created>いのうえ,2020/02/23</created>
		/// <changed>いのうえ,2020/02/23</changed>
		// ********************************************************************************
		CTurnManager(void);
		// ********************************************************************************
		/// <summary>
		/// デストラクタ
		/// </summary>
		/// <returns>None</returns>
		/// <created>いのうえ,2020/02/23</created>
		/// <changed>いのうえ,2020/02/23</changed>
		// ********************************************************************************
		~CTurnManager(void);
	public:
		// ********************************************************************************
		/// <summary>
		/// マネージャ取得
		/// </summary>
		/// <returns>マネージャ</returns>
		/// <created>いのうえ,2020/02/23</created>
		/// <changed>いのうえ,2020/02/23</changed>
		// ********************************************************************************
		static CTurnManager& GetTurnManager(void);
		// ********************************************************************************
		/// <summary>
		/// ターンの更新
		/// </summary>
		/// <created>いのうえ,2020/02/23</created>
		/// <changed>いのうえ,2020/02/23</changed>
		// ********************************************************************************
		void RefreshTurn(void);
		// ********************************************************************************
		/// <summary>
		/// ターンのセット
		/// </summary>
		/// <param name="turn">ターン</param>
		/// <created>いのうえ,2020/02/23</created>
		/// <changed>いのうえ,2020/02/23</changed>
		// ********************************************************************************
		void SetTurn(const Turn& turn);
		// ********************************************************************************
		/// <summary>
		/// ターンの取得
		/// </summary>
		/// <returns>現在のターン</returns>
		/// <created>いのうえ,2020/02/23</created>
		/// <changed>いのうえ,2020/02/23</changed>
		// ********************************************************************************
		Turn GetTurn(void) const;
		// ********************************************************************************
		/// <summary>
		/// ターン変更フラグ取得
		/// </summary>
		/// <returns>ターン変更フラグ</returns>
		/// <created>いのうえ,2020/02/23</created>
		/// <changed>いのうえ,2020/02/23</changed>
		// ********************************************************************************
		bool IsChanged(void) const;
	};
#define	theTurnManager CTurnManager::GetTurnManager()
}